import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, P as onMount, v as validate_slots, Q as globals, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, k as add_location, l as insert_dev, m as append_dev, G as set_data_dev, n as noop } from './client.adb3fe0a.js';

/* src/routes/profile.svelte generated by Svelte v3.21.0 */

const { console: console_1 } = globals;
const file = "src/routes/profile.svelte";

function create_fragment(ctx) {
	let h2;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3_value = /*profile*/ ctx[0].user.name + "";
	let t3;
	let t4;
	let p1;
	let t5;
	let t6_value = /*profile*/ ctx[0].user._id + "";
	let t6;
	let t7;
	let p2;
	let t8;
	let t9_value = /*profile*/ ctx[0].user.role + "";
	let t9;
	let t10;
	let p3;
	let t11;
	let t12_value = /*profile*/ ctx[0].user.email + "";
	let t12;
	let t13;
	let p4;
	let t14;
	let t15_value = /*profile*/ ctx[0].user.createdAt + "";
	let t15;
	let t16;
	let p5;
	let t17;
	let t18_value = /*profile*/ ctx[0].user.__v + "";
	let t18;
	let t19;
	let p6;
	let t20;
	let t21_value = /*profile*/ ctx[0].token + "";
	let t21;

	const block = {
		c: function create() {
			h2 = element("h2");
			t0 = text("Profile");
			t1 = space();
			p0 = element("p");
			t2 = text("name: ");
			t3 = text(t3_value);
			t4 = space();
			p1 = element("p");
			t5 = text("_id: ");
			t6 = text(t6_value);
			t7 = space();
			p2 = element("p");
			t8 = text("role: ");
			t9 = text(t9_value);
			t10 = space();
			p3 = element("p");
			t11 = text("email: ");
			t12 = text(t12_value);
			t13 = space();
			p4 = element("p");
			t14 = text("createdAt: ");
			t15 = text(t15_value);
			t16 = space();
			p5 = element("p");
			t17 = text("__v: ");
			t18 = text(t18_value);
			t19 = space();
			p6 = element("p");
			t20 = text("token: ");
			t21 = text(t21_value);
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Profile");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "name: ");
			t3 = claim_text(p0_nodes, t3_value);
			p0_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, "_id: ");
			t6 = claim_text(p1_nodes, t6_value);
			p1_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			p2 = claim_element(nodes, "P", {});
			var p2_nodes = children(p2);
			t8 = claim_text(p2_nodes, "role: ");
			t9 = claim_text(p2_nodes, t9_value);
			p2_nodes.forEach(detach_dev);
			t10 = claim_space(nodes);
			p3 = claim_element(nodes, "P", {});
			var p3_nodes = children(p3);
			t11 = claim_text(p3_nodes, "email: ");
			t12 = claim_text(p3_nodes, t12_value);
			p3_nodes.forEach(detach_dev);
			t13 = claim_space(nodes);
			p4 = claim_element(nodes, "P", {});
			var p4_nodes = children(p4);
			t14 = claim_text(p4_nodes, "createdAt: ");
			t15 = claim_text(p4_nodes, t15_value);
			p4_nodes.forEach(detach_dev);
			t16 = claim_space(nodes);
			p5 = claim_element(nodes, "P", {});
			var p5_nodes = children(p5);
			t17 = claim_text(p5_nodes, "__v: ");
			t18 = claim_text(p5_nodes, t18_value);
			p5_nodes.forEach(detach_dev);
			t19 = claim_space(nodes);
			p6 = claim_element(nodes, "P", {});
			var p6_nodes = children(p6);
			t20 = claim_text(p6_nodes, "token: ");
			t21 = claim_text(p6_nodes, t21_value);
			p6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 49, 0, 1631);
			add_location(p0, file, 55, 0, 1653);
			add_location(p1, file, 56, 0, 1686);
			add_location(p2, file, 57, 0, 1717);
			add_location(p3, file, 58, 0, 1750);
			add_location(p4, file, 59, 0, 1785);
			add_location(p5, file, 60, 0, 1828);
			add_location(p6, file, 61, 0, 1859);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t2);
			append_dev(p0, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t5);
			append_dev(p1, t6);
			insert_dev(target, t7, anchor);
			insert_dev(target, p2, anchor);
			append_dev(p2, t8);
			append_dev(p2, t9);
			insert_dev(target, t10, anchor);
			insert_dev(target, p3, anchor);
			append_dev(p3, t11);
			append_dev(p3, t12);
			insert_dev(target, t13, anchor);
			insert_dev(target, p4, anchor);
			append_dev(p4, t14);
			append_dev(p4, t15);
			insert_dev(target, t16, anchor);
			insert_dev(target, p5, anchor);
			append_dev(p5, t17);
			append_dev(p5, t18);
			insert_dev(target, t19, anchor);
			insert_dev(target, p6, anchor);
			append_dev(p6, t20);
			append_dev(p6, t21);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*profile*/ 1 && t3_value !== (t3_value = /*profile*/ ctx[0].user.name + "")) set_data_dev(t3, t3_value);
			if (dirty & /*profile*/ 1 && t6_value !== (t6_value = /*profile*/ ctx[0].user._id + "")) set_data_dev(t6, t6_value);
			if (dirty & /*profile*/ 1 && t9_value !== (t9_value = /*profile*/ ctx[0].user.role + "")) set_data_dev(t9, t9_value);
			if (dirty & /*profile*/ 1 && t12_value !== (t12_value = /*profile*/ ctx[0].user.email + "")) set_data_dev(t12, t12_value);
			if (dirty & /*profile*/ 1 && t15_value !== (t15_value = /*profile*/ ctx[0].user.createdAt + "")) set_data_dev(t15, t15_value);
			if (dirty & /*profile*/ 1 && t18_value !== (t18_value = /*profile*/ ctx[0].user.__v + "")) set_data_dev(t18, t18_value);
			if (dirty & /*profile*/ 1 && t21_value !== (t21_value = /*profile*/ ctx[0].token + "")) set_data_dev(t21, t21_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(p1);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(p2);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(p3);
			if (detaching) detach_dev(t13);
			if (detaching) detach_dev(p4);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(p5);
			if (detaching) detach_dev(t19);
			if (detaching) detach_dev(p6);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function getData(url = "") {
	// Default options are marked with *
	const response = await fetch(url, {
		method: "GET", // *GET, POST, PUT, DELETE, etc.
		mode: "cors", // no-cors, *cors, same-origin
		cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
		credentials: "include", // include, *same-origin, omit
		// headers: {
		//     'Content-Type': 'application/json'
		// 'Content-Type': 'application/x-www-form-urlencoded',
		// },
		redirect: "follow", // manual, *follow, error
		referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
		
	}); // body: JSON.stringify(data) // body data type must match "Content-Type" header

	return response.json(); // parses JSON response into native JavaScript objects
}

function log() {
	console.log("clicked");
}

function instance($$self, $$props, $$invalidate) {
	let profile = {
		"user": {
			"role": "",
			"_id": "",
			"name": "",
			"email": "",
			"createdAt": "",
			"updatedAt": "",
			"__v": null
		},
		"token": ""
	};

	onMount(async () => {
		handleSubmit();
	});

	function handleSubmit() {
		let url = "http://localhost:3000/api/users/me";
		getData(url).then(data => $$invalidate(0, profile = data));
	}
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Profile> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Profile", $$slots, []);

	$$self.$capture_state = () => ({
		onMount,
		profile,
		getData,
		handleSubmit,
		log
	});

	$$self.$inject_state = $$props => {
		if ("profile" in $$props) $$invalidate(0, profile = $$props.profile);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [profile];
}

class Profile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Profile",
			options,
			id: create_fragment.name
		});
	}
}

export default Profile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5iNzk0Mjk4My5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9wcm9maWxlLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXG4gICAgbGV0IHByb2ZpbGUgPSB7XG4gICAgICAgIFwidXNlclwiOiB7XG4gICAgICAgICAgICBcInJvbGVcIjogXCJcIixcbiAgICAgICAgICAgIFwiX2lkXCI6IFwiXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJcIixcbiAgICAgICAgICAgIFwiZW1haWxcIjogXCJcIixcbiAgICAgICAgICAgIFwiY3JlYXRlZEF0XCI6IFwiXCIsXG4gICAgICAgICAgICBcInVwZGF0ZWRBdFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJfX3ZcIjogbnVsbFxuICAgICAgICB9LFxuICAgICAgICBcInRva2VuXCI6IFwiXCJcbiAgICB9O1xuXG4gICAgb25Nb3VudChhc3luYyAoKSA9PiB7XG4gICAgICAgIGhhbmRsZVN1Ym1pdCgpXG4gICAgfSk7XG5cbiAgICBhc3luYyBmdW5jdGlvbiBnZXREYXRhKHVybCA9ICcnKSB7XG4gICAgICAgIC8vIERlZmF1bHQgb3B0aW9ucyBhcmUgbWFya2VkIHdpdGggKlxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywgLy8gKkdFVCwgUE9TVCwgUFVULCBERUxFVEUsIGV0Yy5cbiAgICAgICAgICAgIG1vZGU6ICdjb3JzJywgLy8gbm8tY29ycywgKmNvcnMsIHNhbWUtb3JpZ2luXG4gICAgICAgICAgICBjYWNoZTogJ25vLWNhY2hlJywgLy8gKmRlZmF1bHQsIG5vLWNhY2hlLCByZWxvYWQsIGZvcmNlLWNhY2hlLCBvbmx5LWlmLWNhY2hlZFxuICAgICAgICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJywgLy8gaW5jbHVkZSwgKnNhbWUtb3JpZ2luLCBvbWl0XG4gICAgICAgICAgICAvLyBoZWFkZXJzOiB7XG4gICAgICAgICAgICAvLyAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgIC8vICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcbiAgICAgICAgICAgIC8vIH0sXG4gICAgICAgICAgICByZWRpcmVjdDogJ2ZvbGxvdycsIC8vIG1hbnVhbCwgKmZvbGxvdywgZXJyb3JcbiAgICAgICAgICAgIHJlZmVycmVyUG9saWN5OiAnbm8tcmVmZXJyZXInLCAvLyBuby1yZWZlcnJlciwgKm5vLXJlZmVycmVyLXdoZW4tZG93bmdyYWRlLCBvcmlnaW4sIG9yaWdpbi13aGVuLWNyb3NzLW9yaWdpbiwgc2FtZS1vcmlnaW4sIHN0cmljdC1vcmlnaW4sIHN0cmljdC1vcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4sIHVuc2FmZS11cmxcbiAgICAgICAgICAgIC8vIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpIC8vIGJvZHkgZGF0YSB0eXBlIG11c3QgbWF0Y2ggXCJDb250ZW50LVR5cGVcIiBoZWFkZXJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7IC8vIHBhcnNlcyBKU09OIHJlc3BvbnNlIGludG8gbmF0aXZlIEphdmFTY3JpcHQgb2JqZWN0c1xuICAgIH1cbiAgICBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7XG4gICAgICAgIGxldCB1cmwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS91c2Vycy9tZSc7XG4gICAgICAgIGxldCBkYXRhID0ge307XG4gICAgICAgIGdldERhdGEodXJsKS50aGVuKGRhdGEgPT4gcHJvZmlsZSA9IGRhdGEpO1xuICAgIH1cblxuICAgIG9uTW91bnRcblxuICAgIGZ1bmN0aW9uIGxvZygpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJjbGlja2VkXCIpO1xuICAgIH1cbjwvc2NyaXB0PlxuXG48aDI+UHJvZmlsZTwvaDI+XG5cblxuXG5cblxuPHA+bmFtZToge3Byb2ZpbGUudXNlci5uYW1lfTwvcD5cbjxwPl9pZDoge3Byb2ZpbGUudXNlci5faWR9PC9wPlxuPHA+cm9sZToge3Byb2ZpbGUudXNlci5yb2xlfTwvcD5cbjxwPmVtYWlsOiB7cHJvZmlsZS51c2VyLmVtYWlsfTwvcD5cbjxwPmNyZWF0ZWRBdDoge3Byb2ZpbGUudXNlci5jcmVhdGVkQXR9PC9wPlxuPHA+X192OiB7cHJvZmlsZS51c2VyLl9fdn08L3A+XG48cD50b2tlbjoge3Byb2ZpbGUudG9rZW59PC9wPlxuXG5cbjxzdHlsZT5cblxuPC9zdHlsZT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OzRCQXVEVSxHQUFPLElBQUMsSUFBSSxDQUFDLElBQUk7Ozs7OzRCQUNsQixHQUFPLElBQUMsSUFBSSxDQUFDLEdBQUc7Ozs7OzRCQUNmLEdBQU8sSUFBQyxJQUFJLENBQUMsSUFBSTs7Ozs7NkJBQ2hCLEdBQU8sSUFBQyxJQUFJLENBQUMsS0FBSzs7Ozs7NkJBQ2QsR0FBTyxJQUFDLElBQUksQ0FBQyxTQUFTOzs7Ozs2QkFDNUIsR0FBTyxJQUFDLElBQUksQ0FBQyxHQUFHOzs7Ozs2QkFDZCxHQUFPLElBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FFQU5kLEdBQU8sSUFBQyxJQUFJLENBQUMsSUFBSTtxRUFDbEIsR0FBTyxJQUFDLElBQUksQ0FBQyxHQUFHO3FFQUNmLEdBQU8sSUFBQyxJQUFJLENBQUMsSUFBSTt1RUFDaEIsR0FBTyxJQUFDLElBQUksQ0FBQyxLQUFLO3VFQUNkLEdBQU8sSUFBQyxJQUFJLENBQUMsU0FBUzt1RUFDNUIsR0FBTyxJQUFDLElBQUksQ0FBQyxHQUFHO3VFQUNkLEdBQU8sSUFBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBMUNMLE9BQU8sQ0FBQyxHQUFHLEdBQUcsRUFBRTs7T0FFckIsUUFBUSxTQUFTLEtBQUssQ0FBQyxHQUFHO0VBQzVCLE1BQU0sRUFBRSxLQUFLO0VBQ2IsSUFBSSxFQUFFLE1BQU07RUFDWixLQUFLLEVBQUUsVUFBVTtFQUNqQixXQUFXLEVBQUUsU0FBUzs7Ozs7RUFLdEIsUUFBUSxFQUFFLFFBQVE7RUFDbEIsY0FBYyxFQUFFLGFBQWE7Ozs7UUFHMUIsUUFBUSxDQUFDLElBQUk7OztTQVVmLEdBQUc7Q0FDUixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVM7Ozs7S0EzQ3JCLE9BQU87RUFDUCxNQUFNO0dBQ0YsTUFBTSxFQUFFLEVBQUU7R0FDVixLQUFLLEVBQUUsRUFBRTtHQUNULE1BQU0sRUFBRSxFQUFFO0dBQ1YsT0FBTyxFQUFFLEVBQUU7R0FDWCxXQUFXLEVBQUUsRUFBRTtHQUNmLFdBQVcsRUFBRSxFQUFFO0dBQ2YsS0FBSyxFQUFFLElBQUk7O0VBRWYsT0FBTyxFQUFFLEVBQUU7OztDQUdmLE9BQU87RUFDSCxZQUFZOzs7VUFvQlAsWUFBWTtNQUNiLEdBQUcsR0FBRyxvQ0FBb0M7RUFFOUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxvQkFBSSxPQUFPLEdBQUcsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
